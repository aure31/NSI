

#5 = 1+1+1+1+1
#5 = 2+1+1+1+0
#5 = 2+2+1+0+0
#5 = 3+1+1+0+0
#5 = 3+2+0+0+0
#5 = 4+1+0+0+0
#5 = 5+0+0+0+0
#
#6 = 1+1+1+1+1+1
#6 = 2+1+1+1+1+0
#6 = 2+2+1+1+0+0
#6 = 3+1+1+1+0+0
#6 = 2+2+2+0+0+0
#6 = 2+3+1+0+0+0
#6 = 4+1+1+0+0+0
#6 = 2+4+0+0+0+0
#6 = 3+3+0+0+0+0
#6 = 5+1+0+0+0+0
#6 = 6+0+0+0+0+0
#
#7 = 1+1+1+1+1+1+1
#7 = 2+1+1+1+1+1+0
#7 = 2+2+1+1+1+0+0
#7 = 3+1+1+1+1+0+0
#7 = 2+2+2+1+0+0+0
#7 = 2+3+1+1+0+0+0
#7 = 4+1+1+1+0+0+0
#7 = 2+2+3+0+0+0+0
#7 = 2+4+1+0+0+0+0
#7 = 3+3+1+0+0+0+0
#7 = 5+1+1+0+0+0+0
#7 = 2+5+0+0+0+0+0
#7 = 3+4+0+0+0+0+0
#7 = 6+1+0+0+0+0+0
#7 = 7+0+0+0+0+0+0
#
#8 = 1+1+1+1+1+1+1+1
#8 = 2+1+1+1+1+1+1+0
#8 = 2+2+1+1+1+1+0+0
#8 = 3+1+1+1+1+1+0+0
#8 = 2+2+2+1+1+0+0+0
#8 = 2+3+1+1+1+0+0+0
#8 = 4+1+1+1+1+0+0+0
#8 = 2+2+2+2+0+0+0+0
#8 = 2+4+1+1+0+0+0+0
#8 = 3+3+1+1+0+0+0+0
#8 = 5+1+1+1+0+0+0+0
#8 = 2+3+3+0+0+0+0+0
#8 = 2+5+1+0+0+0+0+0
#8 = 3+4+1+0+0+0+0+0
#8 = 6+1+1+0+0+0+0+0
#8 = 2+6+0+0+0+0+0+0
#8 = 3+5+0+0+0+0+0+0
#8 = 4+4+0+0+0+0+0+0
#8 = 7+1+0+0+0+0+0+0
#8 = 8+0+0+0+0+0+0+0

def nb_sommes(n):
    def partition_count(n, max_val):
        if n == 0:
            return 1
        if n < 0 or max_val == 0:
            return 0
        return partition_count(n - max_val, max_val) + partition_count(n, max_val - 1)

    return partition_count(n, n)

# tests

print(nb_sommes(2))
assert nb_sommes(3) == 3
assert nb_sommes(4) == 5
assert nb_sommes(5) == 7
assert nb_sommes(6) == 11
assert nb_sommes(7) == 15
assert nb_sommes(8) == 22






